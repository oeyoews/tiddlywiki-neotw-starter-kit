{
    "title": "$:/plugins/oeyoews/neotw-unsplash",
    "description": "Neotw Unsplash",
    "author": "oeyoews",
    "version": "0.0.1",
    "core-version": ">=5.2.5",
    "type": "application/json",
    "plugin-type": "plugin",
    "name": "Neotw Unsplash",
    "dependents": "$:/plugins/oeyoews/tiddlywiki-tailwindcss-plus $:/plugins/oeyoews/tiddlywiki-modal-ui $:/plugins/oeyoews/tiddlywiki-notify",
    "list": "readme explore",
    "text": "{\"tiddlers\":{\"$:/plugins/oeyoews/neotw-unsplash/Layout\":{\"title\":\"$:/plugins/oeyoews/neotw-unsplash/Layout\",\"tags\":\"$:/tags/Layout\",\"name\":\"{{$:/plugins/oeyoews/neotw-unsplash/icon}} Unsplash\",\"description\":\"Unsplash\",\"text\":\"\\\\import [[$:/core/ui/PageMacros]] [all[shadows+tiddlers]tag[$:/tags/Macro]!has[draft.of]]\\n\\n<$vars\\n  tv-config-toolbar-icons={{$:/config/Toolbar/Icons}}\\n  tv-config-toolbar-text={{$:/config/Toolbar/Text}}\\n  tv-config-toolbar-class={{$:/config/Toolbar/ButtonClass}}\\n  tv-enable-drag-and-drop={{$:/config/DragAndDrop/Enable}}\\n  tv-show-missing-links={{$:/config/MissingLinks}}\\n  storyviewTitle={{$:/view}}\\n  languageTitle={{{ [{$:/language}get[name]] }}}>\\n\\n<div class=\\\"prose max-w-none prose-indigo m-auto sm:w-auto md:w-2/3\\\">\\n{{{ [[$:/plugins/oeyoews/neotw-unsplash/readme]] ||$:/core/ui/ViewTemplate }}}\\n</div>\"},\"$:/plugins/oeyoews/neotw-unsplash/readme\":{\"title\":\"$:/plugins/oeyoews/neotw-unsplash/readme\",\"description\":\"Unsplash\",\"text\":\"<div class=\\\"prose max-w-none prose-indigo\\\">\\n\\n!! Neotw Unsplash\\n\\n* [[Source|https://github.com/oeyoews/neotw/tree/main/plugins/oeyoews/neotw-unsplash]]\\n* [[Demo|https://oeyoews.github.io/neotw]]\\n\\n!! TODO\\n\\n* use other image api <19-05-23, oeyoews>\\n* use tm-notify or others notify\\n* hover style bug\\n<!-- * add tm-modal on edittoolbar to call unsplash <19-05-23, oeyoews> -->\\n\\n!! Video\\n\\n<!-- <iframe src=\\\"https://player.bilibili.com/player.html?aid=614007063&bvid=BV19h4y1x7kg&cid=1141229148&page=1\\\" width=\\\"100%\\\" height=\\\"500\\\" scrolling=\\\"no\\\" border=\\\"0\\\" frameborder=\\\"no\\\" framespacing=\\\"0\\\" allowfullscreen=\\\"true\\\" sandbox=\\\"allow-top-navigation allow-same-origin allow-forms allow-scripts\\\"> </iframe> -->\\n\\n!! UnsplashAPI\\n\\n<!-- UnsplashAPI: <$UnsplashAPI /> -->\\n\\n</div>\\n\"},\"UnplashAPI/widget\":{\"title\":\"UnplashAPI/widget\",\"text\":\"/*\\\\\\ntitle: UnplashAPI/widget\\ntype: application/javascript\\nmodule-type: widget\\n\\nUnplashAPI widget\\n\\n\\\\*/\\n\\n// TODO: manual\\n(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict';\\n\\n  if (!$tw.browser) return;\\n\\n  const Widget = require('$:/core/modules/widgets/widget.js').widget;\\n\\n  class UnsplashAPIWidget extends Widget {\\n    constructor(parseTreeNode, options) {\\n      super(parseTreeNode, options);\\n    }\\n    render(parent, nextSibling) {\\n      this.parentDomNode = parent;\\n      this.computeAttributes();\\n      this.execute();\\n\\n      // baKbPgwlhbBfF7mHcGf0DS0TmFzi8GknZ4hbUhuNkrA\\n      const placeholder = localStorage.getItem('unsplashApiKey') || '';\\n\\n      Swal.fire({\\n        title: 'Unsplash API',\\n        input: 'text',\\n        inputPlaceholder: placeholder,\\n        inputValue: placeholder,\\n        showCancelButton: true,\\n        confirmButtonText: 'Save',\\n        showLoaderOnConfirm: true,\\n        preConfirm: input => {\\n          if (input) {\\n            localStorage.setItem('unsplashApiKey', input.trim());\\n          }\\n        },\\n      }).then(result => {\\n        if (result.isConfirmed) {\\n          const inputNode = $tw.utils.domMaker('input', {\\n            type: 'text',\\n            attributes: {\\n              value: result.value,\\n              placeholder: result.value,\\n            },\\n          });\\n          inputNode.addEventListener('input', event => {\\n            const unsplashAPI = event.target.value;\\n            localStorage.setItem('unsplashApiKey', unsplashAPI);\\n          });\\n\\n          const divNode = $tw.utils.domMaker('div', {\\n            class: '',\\n            attributes: {},\\n            children: [inputNode],\\n          });\\n          parent.insertBefore(divNode, nextSibling);\\n          this.domNodes.push(divNode);\\n        }\\n      });\\n    }\\n  }\\n\\n  exports['UnsplashAPI'] = UnsplashAPIWidget;\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/oeyoews/neotw-unsplash/editorbar\":{\"title\":\"$:/plugins/oeyoews/neotw-unsplash/editorbar\",\"tags\":\"$:/tags/EditorToolbar\",\"caption\":\"Unsplash\",\"condition\":\"[<targetTiddler>!has[type]] [<targetTiddler>type[text/vnd.tiddlywiki]] [<targetTiddler>type[text/markdown]]\",\"dropdown\":\"$:/plugins/oeyoews/neotw-unsplash/unsplash\",\"text\":\"Unsplash\\n\"},\"$:/plugins/oeyoews/neotw-unsplash/explore\":{\"title\":\"$:/plugins/oeyoews/neotw-unsplash/explore\",\"text\":\"<$macrocall $name=\\\"tree\\\" prefix={{{ [<currentTiddler>addsuffix[/]] }}}>\\n\"},\"$:/plugins/oeyoews/neotw-unsplash/icon\":{\"title\":\"$:/plugins/oeyoews/neotw-unsplash/icon\",\"text\":\"<svg viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m0 0h24v24h-24z\\\" fill=\\\"none\\\"/><path d=\\\"m8.5 11v5h7v-5h5.5v10h-18v-10zm7-8v5h-7v-5z\\\"/></svg>\",\"type\":\"image/svg+xml\"},\"$:/plugins/oeyoews/neotw-unsplash/snippets/unsplash\":{\"title\":\"$:/plugins/oeyoews/neotw-unsplash/snippets/unsplash\",\"caption\":\"Unsplash Widget\",\"description\":\"Unsplash Widget\",\"tags\":\"$:/tags/TextEditor/Snippet\",\"text\":\"<$unsplash />$1\\n\"},\"$:/plugins/oeyoews/neotw-unsplash/unsplash\":{\"title\":\"$:/plugins/oeyoews/neotw-unsplash/unsplash\",\"caption\":\"Unsplash\",\"mask-closable\":\"yes\",\"subtitle\":\"Unsplash\",\"class\":\"o-tm\",\"text\":\"<!-- tc-modal-centered -->\\n\\n<$unsplash />\\n\"},\"widget-unsplash\":{\"title\":\"widget-unsplash\",\"text\":\"/*\\\\\\ntitle: widget-unsplash\\ntype: application/javascript\\nmodule-type: widget\\n\\nwidget-unsplash widget\\n\\n\\\\*/\\n(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict';\\n\\n  if (!$tw.browser) return;\\n  const Widget = require('$:/core/modules/widgets/widget.js').widget;\\n\\n  class DivWidget extends Widget {\\n    constructor(parseTreeNode, options) {\\n      super(parseTreeNode, options);\\n    }\\n\\n    render(parent, nextSibling) {\\n      this.parentDomNode = parent;\\n      this.computeAttributes();\\n      this.execute();\\n\\n      // use has\\n      const local = this.getAttribute('local', '');\\n      // online https\\n      if (window.location.protocol === 'http:' && !local) return;\\n\\n      const title = this.getVariable('currentTiddler');\\n      const alt = title;\\n      const src = `https://source.unsplash.com/random?fm=blurhash&w=50&${title}`;\\n      const classNames = this.getAttribute('class', '').split(' ');\\n\\n      const imgNode = $tw.utils.domMaker('img', {\\n        class: 'rounded cursor-pointer',\\n        attributes: {\\n          src,\\n          title,\\n          alt,\\n          ['data-fancybox']: '',\\n        },\\n      });\\n      classNames.forEach(className => {\\n        if (className) {\\n          imgNode.classList.add(className);\\n        }\\n      });\\n      parent.insertBefore(imgNode, nextSibling);\\n      this.domNodes.push(imgNode);\\n    }\\n  }\\n\\n  exports['ocover'] = DivWidget;\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/oeyoews/neotw-unsplash/widget.js\":{\"title\":\"$:/plugins/oeyoews/neotw-unsplash/widget.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/oeyoews/neotw-unsplash/widget.js\\ntype: application/javascript\\nmodule-type: widget\\n\\nneotw-unsplash widget\\n\\n\\\\*/\\n// TODO: directly to copy image\\n(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict';\\n\\n  if (!$tw.browser) return;\\n\\n  const Widget = require('$:/core/modules/widgets/widget.js').widget;\\n\\n  class UnsplashWidget extends Widget {\\n    constructor(parseTreeNode, options) {\\n      super(parseTreeNode, options);\\n    }\\n\\n    render(parent, nextSibling) {\\n      this.parentDomNode = parent;\\n      this.computeAttributes();\\n      this.execute();\\n\\n      // 创建搜索栏和搜索按钮\\n      function createSearchBar() {\\n        const searchInput = $tw.utils.domMaker('input', {\\n          class:\\n            'px-2 py-2 bg-white border border-gray-300 rounded shadow-sm focus:outline-none focus:border-blue-300',\\n          attributes: {\\n            autofocus: '',\\n            placeholder: 'Search photos...',\\n            type: 'text',\\n            id: 'search-input',\\n            name: 'query',\\n          },\\n        });\\n\\n        const searchForm = $tw.utils.domMaker('form', {\\n          class: 'flex justify-center items-center my-4',\\n          children: [searchInput],\\n        });\\n\\n        return { searchForm, searchInput };\\n      }\\n\\n      // 在 Unsplash 上搜索照片\\n      async function searchPhotos(query) {\\n        const apiKey = window.localStorage.getItem('unsplashApiKey') || '';\\n        // baKbPgwlhbBfF7mHcGf0DS0TmFzi8GknZ4hbUhuNkrA\\n        if (!apiKey) {\\n          Swal.fire({\\n            title: 'Please enter your Unsplash API Key:',\\n            input: 'text',\\n            inputAttributes: {\\n              autocapitalize: 'off',\\n            },\\n            showCancelButton: true,\\n            confirmButtonText: 'Save',\\n            showLoaderOnConfirm: true,\\n            preConfirm: input => {\\n              if (input) {\\n                window.localStorage.setItem('unsplashApiKey', input.trim());\\n              }\\n            },\\n          });\\n        }\\n        const apiUrl = `https://api.unsplash.com/search/photos?query=${query}&orientation=landscape&client_id=${apiKey}&lang=en&per_page=21`;\\n        const response = await fetch(apiUrl);\\n        const data = await response.json();\\n        return data.results;\\n      }\\n\\n      // 创建一个照片元素\\n      function createPhotoElement(photo) {\\n        const elementWrapper = document.createElement('div');\\n        elementWrapper.classList.add('w-full', 'md:w-1/2', 'lg:w-1/3', 'p-4');\\n\\n        const element = $tw.utils.domMaker('div', {\\n          class:\\n            'bg-white rounded-lg shadow-lg overflow-hidden w-44 h-44 cursor-pointer',\\n        });\\n        element.style.backgroundImage = `url(${photo.urls.small})`;\\n        element.style.backgroundSize = 'cover';\\n        element.style.backgroundPosition = 'center';\\n\\n        // 监听图片元素的点击事件，复制图片 URL\\n        element.addEventListener('click', () => {\\n          const imageUrl = `<$image source=\\\"${photo.urls.regular}\\\" alt=\\\"Unsplash Image\\\" fancybox=\\\"yes\\\"/>`;\\n          navigator.clipboard.writeText(imageUrl);\\n          Swal.fire({\\n            icon: 'success',\\n            titleText: `Copied to Clipboard`,\\n            toast: true,\\n            footer: 'Unsplash by @oeyoews',\\n            position: 'top-end',\\n            showConfirmButton: false,\\n            timer: 1500,\\n            timerProgressBar: false,\\n          });\\n        });\\n\\n        elementWrapper.appendChild(element);\\n\\n        return elementWrapper;\\n      }\\n\\n      // 实时搜索处理函数\\n      const handleSearchInput = _.debounce(function (event) {\\n        const query = event.target.value.trim();\\n        if (!query) {\\n          return;\\n        }\\n        performSearch(query);\\n      }, 300);\\n\\n      // 执行搜索\\n      async function performSearch(query) {\\n        resultsContainer.textContent = 'Searching...';\\n        resultsContainer.classList.add('h-96', 'overflow-y-scroll');\\n\\n        try {\\n          const photos = await searchPhotos(query);\\n          resultsContainer.textContent = '';\\n\\n          if (Array.isArray(photos)) {\\n            photos.forEach(photo => {\\n              const element = createPhotoElement(photo);\\n              resultsContainer.appendChild(element);\\n            });\\n          }\\n        } catch (error) {\\n          console.log(error);\\n        }\\n      }\\n\\n      const { searchForm, searchInput } = createSearchBar();\\n      searchInput.addEventListener('input', handleSearchInput);\\n\\n      const resultsContainer = $tw.utils.domMaker('div', {\\n        text: '',\\n        class: 'flex flex-wrap justify-center mt-4',\\n      });\\n\\n      const container = $tw.utils.domMaker('div', {\\n        class: 'flex flex-col',\\n        children: [searchForm, resultsContainer],\\n      });\\n\\n      parent.insertBefore(container, nextSibling);\\n    }\\n  }\\n\\n  exports['unsplash'] = UnsplashWidget;\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"
}